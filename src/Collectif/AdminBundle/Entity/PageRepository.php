<?php

namespace Collectif\AdminBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageRepository extends EntityRepository
{
	public function getPages($actif)
	{
	    $qb = $this->createQueryBuilder('p');

	    $qb->where('p.actif = :actif')
	         ->setParameter('actif', $actif)
	       ->orderBy('p.ordre', 'ASC');
	
	    return $qb->getQuery()->getResult();
	}
	
	public function getAll()
	{
	    $qb = $this->createQueryBuilder('p');

	    $qb->orderBy('p.ordre', 'ASC');
	
	    return $qb->getQuery()->getResult();
	}
	
	public function getPageByAlias($alias)
	{
	    $qb = $this->createQueryBuilder('p');

	    $qb->where('p.alias = :alias')
	         ->setParameter('alias', $alias);
	
	    return $qb->getQuery()->getSingleResult();
	}
	
	public function getMaxOrdre()
	{
		$query = $this->_em->createQuery('SELECT MAX(p.ordre) FROM CollectifAdminBundle:Page p');
    	$resultats = $query->getSingleResult();

    	return $resultats[1];
	}
	
	public function getHierarchie($parent=null) {
		
		$qb = $this->createQueryBuilder('p');
		
		if($parent == null) {
			$qb->where('p.parent IS NULL')->orderBy('p.ordre', 'ASC');
		} else {
			$qb->where('p.parent = :parent')
			->setParameter('parent', $parent)->orderBy('p.ordre', 'ASC');
		}
	
	    return $qb->getQuery()->getResult();
		
	}

	public function getHierarchieFront($parent=null) {
		
		$qb = $this->createQueryBuilder('p');
		
		if($parent == null) {
			$qb->where('p.parent IS NULL AND p.actif = 1')->orderBy('p.ordre', 'ASC');
		} else {
			$qb->where('p.parent = :parent AND p.actif = 1')
			->setParameter('parent', $parent)->orderBy('p.ordre', 'ASC');
		}
	
	    return $qb->getQuery()->getResult();
		
	}
	
	public function getDefaultPage()
	{
	    $qb = $this->createQueryBuilder('p');

	    $qb->where('p.defaut = :defaut')
	         ->setParameter('defaut', true);
	
	    return $qb->getQuery()->getSingleResult();
	}
	
	
	
}
